package com.example.myapp;

import android.content.Intent;
import android.content.SharedPreferences;
import android.os.Bundle;
import android.view.View;
import android.widget.*;

import androidx.appcompat.app.AppCompatActivity;

import com.google.firebase.auth.FirebaseAuth;
import com.google.firebase.auth.FirebaseUser;

public class AccountActivity extends AppCompatActivity {

    private ImageView buttonSearch, buttonFavorite, buttonAccount, iconProfile;
    private Button buttonRegister, buttonLogout;
    private EditText inputEmail, inputPassword;

    private FirebaseAuth mAuth;  // üîπ –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è Firebase Auth

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_account);

        // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è Firebase Auth
        mAuth = FirebaseAuth.getInstance();

        // –ó–≤'—è–∑—É–≤–∞–Ω–Ω—è –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É
        iconProfile = findViewById(R.id.icon_profile);
        inputEmail = findViewById(R.id.input_email);
        inputPassword = findViewById(R.id.input_password);
        buttonRegister = findViewById(R.id.button_register);
        buttonLogout = findViewById(R.id.button_logout);

        buttonSearch = findViewById(R.id.button_search);
        buttonFavorite = findViewById(R.id.button_favorite);
        buttonAccount = findViewById(R.id.button_account);

        // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞, —á–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–∏–π
        if (isUserRegistered()) {
            hideForm();
        } else {
            showForm();
        }

        // –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ —á–µ—Ä–µ–∑ Firebase
        buttonRegister.setOnClickListener(v -> {
            String email = inputEmail.getText().toString().trim();
            String password = inputPassword.getText().toString().trim();

            if (email.isEmpty() || password.isEmpty()) {
                Toast.makeText(this, "–ë—É–¥—å –ª–∞—Å–∫–∞, –∑–∞–ø–æ–≤–Ω—ñ—Ç—å –≤—Å—ñ –ø–æ–ª—è", Toast.LENGTH_SHORT).show();
                return;
            }

            // üîπ –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ —á–µ—Ä–µ–∑ Firebase
            mAuth.createUserWithEmailAndPassword(email, password)
                    .addOnCompleteListener(task -> {
                        if (task.isSuccessful()) {
                            saveUser(email, password); // –õ–æ–∫–∞–ª—å–Ω–µ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è
                            Toast.makeText(this, "–†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è —É Firebase —É—Å–ø—ñ—à–Ω–∞!", Toast.LENGTH_SHORT).show();
                            hideForm();
                        } else {
                            Toast.makeText(this, "–ü–æ–º–∏–ª–∫–∞: " + task.getException().getMessage(), Toast.LENGTH_LONG).show();
                        }
                    });
        });

        // –ü–æ–∫–∞–∑—É—î–º–æ email –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
        iconProfile.setOnClickListener(v -> {
            FirebaseUser currentUser = mAuth.getCurrentUser();
            if (currentUser != null) {
                String userEmail = currentUser.getEmail();
                Toast.makeText(this, "–í–∏ –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω—ñ —è–∫: " + userEmail, Toast.LENGTH_SHORT).show();
            } else {
                Toast.makeText(this, "–ó–∞—Ä–µ—î—Å—Ç—Ä—É–π—Ç–µ—Å—å, –±—É–¥—å –ª–∞—Å–∫–∞", Toast.LENGTH_SHORT).show();
            }
        });

        // –í–∏—Ö—ñ–¥ –∑ –∞–∫–∞—É–Ω—Ç—É
        buttonLogout.setOnClickListener(v -> {
            mAuth.signOut(); // üîπ –í–∏—Ö—ñ–¥ –∑ Firebase
            logout();
        });

        // –ù–∞–≤—ñ–≥–∞—Ü—ñ—è –¥–æ —ñ–Ω—à–æ—ó –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ
        buttonSearch.setOnClickListener(v -> {
            startActivity(new Intent(this, SecondActivity.class));
            overridePendingTransition(0, 0);
        });

        buttonFavorite.setOnClickListener(v -> {
            startActivity(new Intent(this, FavoriteActivity.class));
            overridePendingTransition(0, 0);
        });

        buttonAccount.setOnClickListener(v -> {
            Toast.makeText(this, "–í–∏ –≤–∂–µ –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ –∞–∫–∞—É–Ω—Ç–∞", Toast.LENGTH_SHORT).show();
        });
    }

    // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –≤ SharedPreferences
    private boolean isUserRegistered() {
        SharedPreferences prefs = getSharedPreferences("UserPrefs", MODE_PRIVATE);
        return prefs.getBoolean("isRegistered", false);
    }

    // –õ–æ–∫–∞–ª—å–Ω–µ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    private void saveUser(String email, String password) {
        SharedPreferences prefs = getSharedPreferences("UserPrefs", MODE_PRIVATE);
        SharedPreferences.Editor editor = prefs.edit();
        editor.putBoolean("isRegistered", true);
        editor.putString("userEmail", email);
        editor.putString("userPassword", password);
        editor.apply();
    }

    // –û—Ç—Ä–∏–º–∞–Ω–Ω—è email –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ SharedPreferences
    private String getUserEmail() {
        SharedPreferences prefs = getSharedPreferences("UserPrefs", MODE_PRIVATE);
        return prefs.getString("userEmail", "");
    }

    // –°—Ö–æ–≤–∞—Ç–∏ —Ñ–æ—Ä–º—É —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó/–≤—Ö–æ–¥—É
    private void hideForm() {
        inputEmail.setVisibility(View.GONE);
        inputPassword.setVisibility(View.GONE);
        buttonRegister.setVisibility(View.GONE);
        buttonLogout.setVisibility(View.VISIBLE);
    }

    // –ü–æ–∫–∞–∑–∞—Ç–∏ —Ñ–æ—Ä–º—É —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó/–≤—Ö–æ–¥—É
    private void showForm() {
        inputEmail.setVisibility(View.VISIBLE);
        inputPassword.setVisibility(View.VISIBLE);
        buttonRegister.setVisibility(View.VISIBLE);
        buttonLogout.setVisibility(View.GONE);
    }

    // –õ–æ–≥—ñ–∫–∞ –≤–∏—Ö–æ–¥—É –∑ –∞–∫–∞—É–Ω—Ç—É
    private void logout() {
        SharedPreferences prefs = getSharedPreferences("UserPrefs", MODE_PRIVATE);
        SharedPreferences.Editor editor = prefs.edit();
        editor.clear();
        editor.apply();

        showForm();
        Toast.makeText(this, "–í–∏ –≤–∏–π—à–ª–∏ –∑ –∞–∫–∞—É–Ω—Ç–∞", Toast.LENGTH_SHORT).show();
    }
}
